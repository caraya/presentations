:where(.live-demo) {
	position: relative;
	--padding: 1.5rem;
	--division: 50;
}

.live-demo {
	--_height: var(--height, 100vh);

	height: var(--_height);
	box-sizing: border-box
}

.live-demo[data-editors="1"] { --editors: 1; }

.live-demo[data-editors="2"] { --editors: 2; }

.live-demo[data-editors="3"] { --editors: 3; }

.live-demo .demo-target {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-flow: column;
	}

.live-demo .demo-controls {
		grid-area: controls;
		z-index: 1;
		display: flex;
		flex-wrap: wrap;
		padding: .3em;
		font-size: 60%;
		line-height: 1.5


	}

.live-demo .demo-controls:empty {
			display: none;
		}

.live-demo .demo-controls h1 {
			margin: 0;
			margin-right: .5em;
			font-size: 150%;
			line-height: 1;
			font-weight: bold;
			letter-spacing: -.02em;
		}

.live-demo .demo-controls form {
			display: contents;
		}

.live-demo .demo-controls details.notes {
			font-size: 100%;
		}

.live-demo .demo-controls details.notes > summary,
		.live-demo .demo-controls .button,
		.live-demo .demo-controls button {
			all: unset;
			display: flex;
			justify-content: center;
			align-items: center;
			padding: .1em .4em;
			margin: 0 .2em;
			box-shadow: 0 0 1px inset;
			border-radius: .2em;
			cursor: pointer;
			font-weight: bold;
			white-space: nowrap
		}

:is(.live-demo .demo-controls details.notes > summary,.live-demo .demo-controls .button,.live-demo .demo-controls button):disabled,
			:is(.live-demo .demo-controls details.notes > summary,.live-demo .demo-controls .button,.live-demo .demo-controls button):not(:hover):not(:focus) {
				opacity: .6;
			}

:is(.live-demo .demo-controls details.notes > summary,.live-demo .demo-controls .button,.live-demo .demo-controls button):disabled {
				cursor: not-allowed;
				filter: grayscale(100%);
			}

.live-demo .demo-controls details.notes > summary,
		.live-demo .demo-controls .button,
		.live-demo .demo-controls button {

			/* Prevent jumping around when the Play button becomes Pause */
		}

.replay:is(.live-demo .demo-controls details.notes > summary,.live-demo .demo-controls .button,.live-demo .demo-controls button) {
				min-width: 7.5ch;
			}

.live-demo .editor-container {
		display: flex;
		flex-flow: column;
		max-width: 100vw
	}

.live-demo .editor-container div.prism-live {
			--min-height: 1.6em
		}

.live-demo .editor-container div.prism-live:not(.collapsed) {
				flex: auto;
			}

.live-demo.minimal .demo-controls {
			display: none;
		}

.live-demo:not(.minimal) {
		padding: 0;
		display: grid;
		align-items: stretch
	}

.live-demo.horizontal:not(.minimal) {
			grid-template: "controls" auto
						   "target"   minmax(0, 1fr)
						   "editor"   auto / 1fr;
		}

.live-demo:not(.minimal):not(.horizontal) {
			 /* if it breaks, use 1.5em as height of first row */
			--fr: calc(2fr * var(--division, 50) / 100);
			grid-template: "editor controls" auto
						   "editor target" minmax(0, 1fr) / calc(100% * var(--division, 50) / 100) minmax(0, 1fr);
		}

.live-demo:not(.minimal) .demo-target {
			grid-area: target;
		}

.live-demo:not(.minimal) .editor-container {
			grid-area: editor;
		}

.live-demo.horizontal:not(.minimal) > div.editor-container:first-child,
			.live-demo.horizontal:not(.minimal) > style:first-child + div.editor-container {
				margin-top: auto;
			}

.live-demo:not(.minimal):not(.horizontal) div.editor-container {
				width: 100%;
				/* min-width: 15em; */
			}

.live-demo.isolated:not(.minimal) > iframe {
				justify-self: stretch;
				border-radius: 8px;
				background: hsl(0 0% 100% / .8);
			}

.live-demo.isolated.horizontal:not(.minimal) > iframe {
						border-bottom-left-radius: 0;
						border-bottom-right-radius: 0;
						margin: 0 .5em;
					}

.live-demo.isolated:not(.minimal):not(.horizontal) {
					padding-right: var(--padding)
				}

.live-demo.isolated:not(.minimal):not(.horizontal) > iframe {
						margin-bottom: var(--padding);
						border-bottom-left-radius: 0;
						border-top-left-radius: 0;
					}

.live-demo.isolated > iframe {
			border: 0;
			margin: 0;
			box-sizing: border-box;
			resize: both;
		}

.live-demo.horizontal:not(.isolated) .demo-target {
				padding: 0 1rem;
			}

.live-demo:not(.isolated):not(.horizontal) div.editor-container {
				margin-right: 1em;
			}

.live-demo.horizontal .demo-controls {
		padding: .3em .6em;
	}

.live-demo div.prism-live {
		color: inherit;
		font-size: calc(var(--font-size-multiplier, 1) * 100%);
		line-height: 1.5em;
		max-height: var(--_height);
		max-height: -webkit-fill-available;
		transition: .2s;
		transition-property: max-height, flex
	}

.live-demo div.prism-live.collapsed {
			min-height: var(--collapsed-height, var(--min-height));


			overflow: hidden;
			flex: none
		}

.live-demo div.prism-live.collapsed pre {
				opacity: .2;
			}

.live-demo div.prism-live.collapsed textarea,
			.live-demo div.prism-live.collapsed pre {
				overflow: hidden;
			}

.live-demo.horizontal div.prism-live.collapsed {
				height: var(--collapsed-height, var(--min-height));
				min-height: var(--min-height);
			}

.live-demo.horizontal pre.prism-live {
			max-height: calc(var(--division, 50) * var(--_height, 100vh) / 100);
		}

.live-demo {

	/* Hack to fix overflowing height */
}

.live-demo:not(.horizontal) div.prism-live {
			contain: size
		}

.live-demo:not(.horizontal) div.prism-live:not(.collapsed) {
				/* max-height: calc(var(--_height) - (var(--editors, 1) - 1) * var(--collapsed-height, var(--min-height))); */
			}

.live-demo textarea.prism-live {
		max-width: 100%;
		min-height: 1.6em;
	}

.live-demo pre.prism-live {
		height: 100%;
		line-height: 1.5em;
	}

.live-demo .prism-live label {
		position: absolute;
		top: .6rem;
		right: 1rem;
		z-index: 1;
		padding: .1rem .5rem;
		border-radius: .2em;
		background: var(--label-color, hsl(30, 100%, 50%));
		color: white;
		cursor: pointer;
		text-transform: uppercase;
		font: bold 1.2rem/1.5 var(--font-heading, var(--heading-font, Helvetica Neue, Segoe UI, sans-serif));
		opacity: .5
	}

.live-demo .prism-live label:hover {
			background: var(--label-hover-color, hsl(15, 100%, 45%));
			opacity: 1;
		}

.demo-controls {
	container-name: demo_controls;
	container-type: inline-size;
}

@container demo_controls (inline-size < 32em) {
	.demo-controls button:is(.next, .prev) {
		display: none;
	}
}